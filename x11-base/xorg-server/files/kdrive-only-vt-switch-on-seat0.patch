--- hw/kdrive/linux/linux.c.orig	2014-09-19 22:36:40.868422309 +0100
+++ hw/kdrive/linux/linux.c	2014-09-19 23:12:25.026263410 +0100
@@ -48,13 +48,14 @@
 #ifdef KDRIVE_KBD
 extern KdKeyboardDriver LinuxKeyboardDriver;
 #endif
+#include <hotplug.h>
 
 static int vtno;
 int LinuxConsoleFd;
 int LinuxApmFd = -1;
 static int activeVT;
 static Bool enabled;
-
+static Bool LinuxNoSwitchVT;
 static void
 LinuxVTRequest(int sig)
 {
@@ -80,19 +81,14 @@
     }
 }
 
-static int
-LinuxInit(void)
+static void
+LinuxOpenConsole(void)
 {
     int fd = -1;
     char vtname[11];
     struct vt_stat vts;
 
     LinuxConsoleFd = -1;
-    /* check if we're run with euid==0 */
-    if (geteuid() != 0) {
-        FatalError("LinuxInit: Server must be suid root\n");
-    }
-
     if (kdVirtualTerminal >= 0)
         vtno = kdVirtualTerminal;
     else {
@@ -131,7 +127,22 @@
         activeVT = vts.v_active;
     }
 
+}
+
+static int
+LinuxInit(void)
+{
+    /* check if we're run with euid==0 */
+    if (geteuid() != 0) {
+        FatalError("LinuxInit: Server must be suid root\n");
+    }
+
+    if (!ServerIsNotSeat0())
+        LinuxOpenConsole();
+    else
+        LinuxNoSwitchVT = TRUE;
     return 1;
+
 }
 
 static void
@@ -249,16 +260,18 @@
     /*
      * now get the VT
      */
-    LinuxSetSwitchMode(VT_AUTO);
-    if (ioctl(LinuxConsoleFd, VT_ACTIVATE, vtno) != 0) {
-        FatalError("LinuxInit: VT_ACTIVATE failed\n");
-    }
-    if (ioctl(LinuxConsoleFd, VT_WAITACTIVE, vtno) != 0) {
-        FatalError("LinuxInit: VT_WAITACTIVE failed\n");
-    }
-    LinuxSetSwitchMode(VT_PROCESS);
-    if (ioctl(LinuxConsoleFd, KDSETMODE, KD_GRAPHICS) < 0) {
-        FatalError("LinuxInit: KDSETMODE KD_GRAPHICS failed\n");
+    if (!LinuxNoSwitchVT) {
+        LinuxSetSwitchMode(VT_AUTO);
+        if (ioctl(LinuxConsoleFd, VT_ACTIVATE, vtno) != 0) {
+            FatalError("LinuxInit: VT_ACTIVATE failed\n");
+        }
+        if (ioctl(LinuxConsoleFd, VT_WAITACTIVE, vtno) != 0) {
+            FatalError("LinuxInit: VT_WAITACTIVE failed\n");
+        }
+        LinuxSetSwitchMode(VT_PROCESS);
+        if (ioctl(LinuxConsoleFd, KDSETMODE, KD_GRAPHICS) < 0) {
+            FatalError("LinuxInit: KDSETMODE KD_GRAPHICS failed\n");
+        }
     }
     enabled = TRUE;
 }
@@ -266,10 +279,12 @@
 static void
 LinuxDisable(void)
 {
-    ioctl(LinuxConsoleFd, KDSETMODE, KD_TEXT);  /* Back to text mode ... */
-    if (kdSwitchPending) {
-        kdSwitchPending = FALSE;
-        ioctl(LinuxConsoleFd, VT_RELDISP, 1);
+    if (!LinuxNoSwitchVT) {
+        ioctl(LinuxConsoleFd, KDSETMODE, KD_TEXT);  /* Back to text mode ... */
+        if (kdSwitchPending) {
+            kdSwitchPending = FALSE;
+            ioctl(LinuxConsoleFd, VT_RELDISP, 1);
+        }
     }
     enabled = FALSE;
     if (LinuxApmFd >= 0) {
@@ -280,8 +295,7 @@
     }
 }
 
-static void
-LinuxFini(void)
+static void LinuxCloseVT(void)
 {
     struct vt_mode VT;
     struct vt_stat vts;
@@ -332,6 +346,13 @@
     return;
 }
 
+static void
+LinuxFini(void)
+{
+    if (!LinuxNoSwitchVT)
+        LinuxCloseVT();
+}
+
 void
 KdOsAddInputDrivers(void)
 {
